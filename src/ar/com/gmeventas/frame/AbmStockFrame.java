/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ar.com.gmeventas.frame;

import ar.com.gmeventas.entities.Compra;
import ar.com.gmeventas.entities.Producto;
import ar.com.gmeventas.entities.ProductoTop;
import ar.com.gmeventas.main.MainFrame;
import ar.com.gmeventas.services.CompraService;
import ar.com.gmeventas.services.ProductoService;
import ar.com.gmeventas.services.ProductoTopService;
import ar.com.gmeventas.util.UtilFrame;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mario
 */
public class AbmStockFrame extends javax.swing.JFrame {

    private SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
    private DecimalFormat df = new DecimalFormat("#0.0");
    private List<Compra> compras;

    /**
     * Creates new form AbmStockFrame
     */
    public AbmStockFrame() {
        initComponents();
        getContentPane().setBackground(new java.awt.Color(100, 100, 255));
        this.setLocationRelativeTo(null);
        llenarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nuevoBtn = new javax.swing.JButton();
        volverBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        eliminarBtn = new javax.swing.JButton();
        verFacturaBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("ABM STOCK");

        nuevoBtn.setText("Nuevo");
        nuevoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoBtnActionPerformed(evt);
            }
        });

        volverBtn.setText("Volver");
        volverBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverBtnActionPerformed(evt);
            }
        });

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Proveedor", "Fecha", "Comprobante", "Producto", "Cantidad", "Rubro", "SubRubro"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabla);
        if (tabla.getColumnModel().getColumnCount() > 0) {
            tabla.getColumnModel().getColumn(0).setPreferredWidth(250);
            tabla.getColumnModel().getColumn(1).setPreferredWidth(60);
            tabla.getColumnModel().getColumn(2).setPreferredWidth(150);
            tabla.getColumnModel().getColumn(4).setPreferredWidth(60);
        }

        eliminarBtn.setText("Eliminar");
        eliminarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarBtnActionPerformed(evt);
            }
        });

        verFacturaBtn.setText("VER FACTURA");
        verFacturaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verFacturaBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 916, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nuevoBtn)
                        .addGap(18, 18, 18)
                        .addComponent(eliminarBtn)
                        .addGap(18, 18, 18)
                        .addComponent(verFacturaBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(volverBtn)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 461, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nuevoBtn)
                    .addComponent(volverBtn)
                    .addComponent(eliminarBtn)
                    .addComponent(verFacturaBtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void volverBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverBtnActionPerformed
        volver();
    }//GEN-LAST:event_volverBtnActionPerformed

    private void nuevoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoBtnActionPerformed
        nuevo();
    }//GEN-LAST:event_nuevoBtnActionPerformed

    private void eliminarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarBtnActionPerformed
        int row = tabla.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(this, "DEBE SELECCIONAR UN PRODUCTO PARA ELIMINAR");
            return;
        }
        eliminar(row);
    }//GEN-LAST:event_eliminarBtnActionPerformed

    private void verFacturaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verFacturaBtnActionPerformed
        int row = tabla.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(this, "DEBE SELECCIONAR UN PRODUCTO PARA VER LA FACTURA COMPLETA");
            return;
        }
        verFactura(row);
    }//GEN-LAST:event_verFacturaBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AbmStockFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AbmStockFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AbmStockFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AbmStockFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AbmStockFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton eliminarBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton nuevoBtn;
    private javax.swing.JTable tabla;
    private javax.swing.JButton verFacturaBtn;
    private javax.swing.JButton volverBtn;
    // End of variables declaration//GEN-END:variables

    private void volver() {
        MainFrame mf = new MainFrame();
        mf.setVisible(true);
        this.dispose();
    }

    private void nuevo() {
        NuevoStockFrame asf = new NuevoStockFrame();
        asf.setVisible(true);
        this.dispose();
    }

    private void llenarTabla() {
        limpiarTabla();
        compras = null;
        try {
            compras = new CompraService().getCompraOrdenado();
        } catch (Exception ex) {
            Logger.getLogger(AbmStockFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        llenarTabla2();

    }

    private void limpiarTabla() {
        int rows = tabla.getRowCount();
        if (rows > 0) {
            DefaultTableModel tbl = (DefaultTableModel) tabla.getModel();
            for (int i = 0; i < rows; i++) {
                tbl.removeRow(0);
            }
            tabla.setModel(tbl);
        }
    }

    private void eliminar(int row) {
        Compra compra = compras.get(row);
        Producto producto = compra.getProducto();
        ProductoTop productoTop;
        Integer codigo = producto.getCodigo();
        try {
            productoTop = new ProductoTopService().getProductoTopByCodigo(codigo);
        } catch (Exception ex) {
            //Logger.getLogger(AbmStockFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "ERROR PRODUCTO - NO PUEDE ELIMINAR");
            return;
        }
        Float cantidad = compra.getCantidad();
        Float stock = producto.getStock();
        if (stock < 1) {
            JOptionPane.showMessageDialog(this, "PRODUCTO SIN STOCK - NO PUEDE ELIMINAR");
            return;
        }
        if (stock < cantidad) {
            JOptionPane.showMessageDialog(this, "PRODUCTO SIN STOCK SUFICIENTE - NO PUEDE ELIMINAR");
            return;
        }
        producto.setStock(stock - cantidad);
        productoTop.setStock(stock - cantidad);
        int a = JOptionPane.showConfirmDialog(this, "CONFIRME AJUSTAR STOCK Y ELIMINAR PRODUCTO",
                "Atención", JOptionPane.YES_NO_OPTION);
        if (a == 0) {
            try {
                new ProductoService().updateProducto(producto);
                new CompraService().deleteCompra(compra);
            } catch (Exception ex) {
                Logger.getLogger(AbmStockFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            llenarTabla();
        }
    }

    private void verFactura(int row) {
        Compra compra = compras.get(row);
        String comprobante = compra.getComprobante();
        Date fecha = compra.getFecha();
        compras = null;
        try {
            compras = new CompraService().getComprasByFechaAndComprobante(fecha, comprobante);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "ERROR nro. 305");
            return;
        }
        VerFacturaCompraCompletaFrame vfcf = new VerFacturaCompraCompletaFrame(compras);
        vfcf.setVisible(true);
        this.dispose();

    }

    private void llenarTabla2() {
        if (compras != null && !compras.isEmpty()) {
            UtilFrame.limpiarTabla(tabla);
            DefaultTableModel tbl = (DefaultTableModel) tabla.getModel();
            for (Compra c : compras) {
                Object o[] = new Object[7];
                o[0] = c.getProveedor();
                o[1] = sdf.format(c.getFecha());
                o[2] = c.getComprobante();
                o[3] = c.getProducto().getDetalle();
                o[4] = df.format(c.getCantidad());
                o[5] = c.getProducto().getRubro().getNombre();
                o[6] = c.getProducto().getSubRubro().getDetalle();
                tbl.addRow(o);
            }
            tabla.setModel(tbl);
        }
    }

}
